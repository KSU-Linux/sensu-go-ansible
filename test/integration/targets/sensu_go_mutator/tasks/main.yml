- import_role:
    name: setup_sensu_backend

- name: Set up Sensu connection info
  set_fact:
    sensu_connection_info: &sensu_connection_info
      url: http://localhost:{{ sensu_port }}

- collections:
    - flowerysong.sensu_go

  block:
    - name: Create a mutator
      sensu_go_mutator:
        name: mutator
        command: sensu-influxdb-mutator
        env_vars:
          INFLUXDB_ADDR: http://influxdb.default.svc.cluster.local:8086
          INFLUXDB_USER: sensu
        runtime_assets:
          - sensu-influxdb-mutator
        <<: *sensu_connection_info
      register: result

    - assert:
        that: result is changed

    - name: Test mutator creation idempotence
      sensu_go_mutator:
        name: mutator
        command: sensu-influxdb-mutator
        env_vars:
          INFLUXDB_ADDR: http://influxdb.default.svc.cluster.local:8086
          INFLUXDB_USER: sensu
        runtime_assets:
          - sensu-influxdb-mutator
        <<: *sensu_connection_info
      register: result

    - assert:
        that: result is not changed

    - name: Modify a mutator
      sensu_go_mutator:
        name: mutator
        command: sensu-influxdb-mutator
        env_vars:
          INFLUXDB_ADDR: http://influxdb.default.svc.cluster.local:8086
          INFLUXDB_USER: sensu
        <<: *sensu_connection_info
      register: result

    - assert:
        that: result is changed

    - name: Create a second mutator
      sensu_go_mutator:
        name: mutator2
        command: sensu-influxdb-mutator
        <<: *sensu_connection_info

    - name: Fetch all mutators
      sensu_go_mutator_info:
        <<: *sensu_connection_info

    - name: Fetch a specific mutator
      sensu_go_mutator_info:
        name: mutator
        <<: *sensu_connection_info
      register: result

    - assert:
        that:
          - result.mutators | length == 1
          - result.mutators.0.metadata.name == 'mutator'

    - name: Delete a mutator
      sensu_go_mutator:
        name: mutator
        state: absent
        <<: *sensu_connection_info

    - name: Fetch all mutators
      sensu_go_mutator_info:
        <<: *sensu_connection_info
      register: result

    - assert:
        that:
          - result.mutators | length == 1
          - result.mutators.0.metadata.name == 'mutator2'

  always:
    - import_role:
        name: setup_kill_sensu_backend
