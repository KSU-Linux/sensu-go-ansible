- import_role:
    name: setup_sensu_backend

- name: Set up Sensu connection info
  set_fact:
    sensu_connection_info: &sensu_connection_info
      url: http://localhost:{{ sensu_port }}

- collections:
    - flowerysong.sensu_go

  block:
    - name: Create a handler
      sensu_go_handler:
        name: handler
        type: pipe
        command: sensu-influxdb-handler
        env_vars:
          INFLUXDB_ADDR: http://influxdb.default.svc.cluster.local:8086
          INFLUXDB_USER: sensu
          INFLUXDB_PASS: password
        runtime_assets:
          - sensu-influxdb-handler
        <<: *sensu_connection_info
      register: result

    - assert:
        that: result is changed

    - name: Test handler creation idempotence
      sensu_go_handler:
        name: handler
        type: pipe
        command: sensu-influxdb-handler
        env_vars:
          INFLUXDB_ADDR: http://influxdb.default.svc.cluster.local:8086
          INFLUXDB_USER: sensu
          INFLUXDB_PASS: password
        runtime_assets:
          - sensu-influxdb-handler
        <<: *sensu_connection_info
      register: result

    - assert:
        that: result is not changed

    - name: Modify a handler
      sensu_go_handler:
        name: handler
        type: pipe
        command: sensu-influxdb-handler
        env_vars:
          INFLUXDB_ADDR: http://influxdb.default.svc.cluster.local:8086
          INFLUXDB_USER: sensu
          INFLUXDB_PASS: pass
        runtime_assets:
          - sensu-influxdb-handler
        <<: *sensu_connection_info
      register: result

    - assert:
        that: result is changed

    - name: Create a second handler
      sensu_go_handler:
        name: handler2
        type: pipe
        command: sensu-influxdb-handler
        env_vars:
          INFLUXDB_ADDR: http://influxdb.default.svc.cluster.local:8086
          INFLUXDB_USER: sensu
          INFLUXDB_PASS: password
        runtime_assets:
          - sensu-influxdb-handler
        <<: *sensu_connection_info

    - name: Fetch all handlers
      sensu_go_handler_info:
        <<: *sensu_connection_info

    - name: Fetch a specific handler
      sensu_go_handler_info:
        name: handler
        <<: *sensu_connection_info
      register: result

    - assert:
        that:
          - result.handlers | length == 1
          - result.handlers.0.metadata.name == 'handler'

    - name: Delete a handler
      sensu_go_handler:
        name: handler
        state: absent
        <<: *sensu_connection_info

    - name: Fetch all handlers
      sensu_go_handler_info:
        <<: *sensu_connection_info
      register: result

    - assert:
        that:
          - result.handlers | length == 1
          - result.handlers.0.metadata.name == 'handler2'

    - name: Test missing parameter handling
      sensu_go_handler:
        name: handler
        state: present
        type: pipe
      ignore_errors: true
      register: result

    - assert:
        that:
          - result is failed
          - "'missing required arguments' in result.msg"

  always:
    - import_role:
        name: setup_kill_sensu_backend
