version: "2.1"

executors:
  python27:
    docker: [ { image: circleci/python:2.7 } ]
    environment: { PY: "2.7" }
    working_directory: ~/ansible_collections/sensu/sensu_go

  python37:
    docker: [ { image: circleci/python:3.7 } ]
    environment: { PY: "3.7" }
    working_directory: ~/ansible_collections/sensu/sensu_go

commands:
  common_setup:
    description: Common steps for all jobs
    steps:
      - checkout: { path: . }
      - run:
          name: Create virtual environment
          command: virtualenv ${HOME}/venv
      - run:
          name: Activate virtualenv
          command: |
            echo 'export PATH=${HOME}/venv/bin:$PATH' >> $BASH_ENV

  install_ansible:
    description: Install selected Ansible version
    parameters:
      version:
        description: Ansible version
        type: string
    steps:
      - run:
          name: Install Ansible
          command: pip install 'ansible==<< parameters.version >>'

  install_git_collection:
    description: Install sensu_go collection from git sources
    steps:
      - run:
          name: Build sensu_go collection
          command: ansible-galaxy collection build
      - run:
          name: Install sensu_go collection
          command: |
            ansible-galaxy collection install \
              -p ${HOME}/.ansible/collections \
              sensu-sensu_go-*.tar.gz

  install_galaxy_collection:
    description: Install sensu_go collection from Ansible Galaxy
    steps:
      - run:
          name: Install sensu_go collection
          command: |
            ansible-galaxy collection install \
              -p ${HOME}/.ansible/collections \
              sensu.sensu_go

  run_ansible_test:
    description: Run selected Ansible test
    parameters:
      kind:
        description: Kind of tests to run
        type: enum
        enum: [ sanity, units ]
      args:
        description: Arguments for this invocation
        type: string
        default: ""
    steps:
      - run:
          name: Install requirements
          command: pip install -r << parameters.kind >>.requirements
      - run:
          name: Run test
          command: |
            ansible-test << parameters.kind >> \
              --python ${PY} \
              << parameters.args >>

  run_molecule_test:
    description: Run molecule test
    steps:
      - run:
          name: Install molecule
          command: pip install molecule[docker]
      - run:
          name: Run integration tests
          command: |
            cd tests/integration/modules
            molecule --base-config molecule/shared/base.yml test --all

  report_coverage:
    description: Report coverage
    steps:
      - run:
          name: Report coverage to console
          command: ansible-test coverage report
      - run:
          name: Report coverage details as HTML
          command: ansible-test coverage html
      - store_artifacts:
          path: tests/output/reports/coverage
          destination: coverage-report

jobs:
  sanity:
    executor: python37
    steps:
      - common_setup
      - install_ansible:
          version: 2.9.0b1
      - run_ansible_test:
          kind: sanity

  unit_test_python27:
    executor: python27
    steps:
      - common_setup
      - install_ansible:
          version: 2.9.0b1
      - run_ansible_test:
          kind: units
          args: --verbose --coverage
      - report_coverage: {}

  unit_test_python37:
    executor: python37
    steps:
      - common_setup
      - install_ansible:
          version: 2.9.0b1
      - run_ansible_test:
          kind: units
          args: --verbose --coverage
      - report_coverage: {}

  integration_modules:
    executor: python37
    steps:
      - common_setup
      - setup_remote_docker
      - install_ansible:
          version: 2.9.0b1
      - install_git_collection
      - run_molecule_test

workflows:
  version: 2
  main_workflow:
    jobs:
      - sanity
      - unit_test_python27
      - unit_test_python37
      - integration_modules
