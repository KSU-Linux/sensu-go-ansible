---
- name: Converge
  collections:
    - sensu.sensu_go
  hosts: all
  gather_facts: true
  tasks:
    - name: Create a filter
      sensu_go_filter:
        auth:
          url: http://localhost:8080
        name: filter
        action: allow
        expressions:
          - event.check.interval == 10
          - event.check.occurrences == 1
        runtime_assets: awesomeness
      register: result

    - assert:
        that:
          - result is changed
          - result.filter.metadata.name == 'filter'

    - name: Test filter creation idempotence
      sensu_go_filter:
        auth:
          url: http://localhost:8080
        name: filter
        action: allow
        expressions:
          - event.check.interval == 10
          - event.check.occurrences == 1
        runtime_assets: awesomeness
      register: result

    - assert:
        that: result is not changed

    - name: Create a second filter
      sensu_go_filter:
        auth:
          url: http://localhost:8080
        name: filter2
        expressions: event.check.interval == 10

    - name: Fetch all filters
      sensu_go_filter_info:
        auth:
          url: http://localhost:8080

    - name: Fetch a specific filter
      sensu_go_filter_info:
        auth:
          url: http://localhost:8080
        name: filter
      register: result

    - assert:
        that:
          - result.filters | length == 1
          - result.filters.0.metadata.name == 'filter'

    - name: Modify a filter
      sensu_go_filter:
        auth:
          url: http://localhost:8080
        name: filter
        action: deny
        expressions: event.check.interval > 10
      register: result

    - assert:
        that:
          - result is changed
          - not result.filter.runtime_assets

    - name: Delete a filter
      sensu_go_filter:
        auth:
          url: http://localhost:8080
        name: filter
        state: absent

    - name: Get all filters
      sensu_go_filter_info:
        auth:
          url: http://localhost:8080
      register: result

    - assert:
        that:
          - result.filters | length == 1
          - result.filters.0.metadata.name == 'filter2'
